#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// ------------------default-----------------
// | prntscrn | scrlk    | pause    | esc      | LAYERSFT |     backspace     | 
// | inserT   | home     | pgup     | num lock |    /     |    *    |    -    |
// | delete   | end      | pgdn     |    7     |    8     |    9    |    +    |
// | A        | B        | C        |    4     |    5     |    6    |         |
// |          | up       |          |    1     |    2     |    3    |  ENTER  |
// | Left     | down     | right    |    0                |    .    |         |
// ----------------------------functions-------------------------------
// | NOP  | NOP  | NOP  |    NOP    | LAYERSFT  |    NOP                     |
// | NOP  | NOP  | NOP  | LAYERSFT  |   NOP     |    NOP    | Bluetooth PREV |
// | NOP  | NOP  | NOP  |    NOP    |   NOP     |    NOP    | Bluetooth Next |
// | NOP  | NOP  | NOP  |    NOP    |  OUT_TOG  |    NOP    |                |
// | NOP  | NOP  | NOP  |   BlE 0   |  BlE 1    |   BLE 2   | reset          |
// | NOP  | NOP  | NOP  |       BluetoothCLR    |    NOP    |                |
// --------------------action layer------------------
// |   NOP   |    NOP   |   NOP    |    NOP   |    NOP   |    NOP                 |
// |   NOP   |    NOP   |   NOP    |    NOP   |    NOP   |    NOP    |     NOP    |
// |   NOP   |    NOP   |   NOP    |    NOP   |    NOP   |    NOP    |     NOP    |
// |   NOP   |    NOP   |   NOP    |    NOP   |    NOP   |    NOP    |            |
// |   NOP   |    NOP   |   NOP    |    NOP   |    NOP   |    NOP    |     NOP    |
// |ArrowLeft|    NOP   |ArrowRight|          |    NOP   | BootLoader|            |

/ {
    macros {
        scrub: scrub {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(I) &kp SQT &kp M &kp SPACE &kp O &kp N &kp SPACE &kp C &kp O &kp N &kp T &kp R &kp O &kp L &kp L &kp E &kp R &kp COMMA &kp SPACE &kp S &kp O &kp R &kp R &kp Y>;
            label = "SCRUB";
        };

        gg_ez: gg_ez {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(G) &kp LS(G) &kp UNDER &kp LS(E) &kp LS(Z)>;
            label = "GG_EZ";
        };

        only_game: only_game {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp Z &kp SPACE &kp O &kp N &kp L &kp Y &kp SPACE &kp G &kp A &kp M &kp E &kp COMMA &kp SPACE &kp W &kp H &kp Y &kp SPACE &kp Y &kp O &kp U &kp SPACE &kp H &kp A &kp F &kp F &kp SPACE &kp T &kp O &kp SPACE &kp B &kp E &kp SPACE &kp M &kp A &kp D>;
            label = "ONLY_GAME";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp LG(PRINTSCREEN)  &kp INS    &kp DEL    &kp ESC     &mo 1          &kp BSPC
&kp L                &kp C      &kp X      &kp KP_NUM  &kp KP_DIVIDE  &kp KP_MULTIPLY
&kp T                &kp O      &kp D      &kp KP_N7   &kp KP_N8      &kp KP_N9
&kp M                &kp I      &kp N      &kp KP_N4   &kp KP_N5      &kp KP_N6
&kp UP               &kp KP_N1  &kp KP_N2  &kp KP_N3   &kp PLUS       &kp MINUS
&kp LEFT             &kp DOWN   &kp RIGHT  &kp KP_N0   &kp KP_DOT     &kp RETURN
            >;
        };

        function_layer {
            bindings = <
&kp TAB       &trans        &trans         &trans          &mo 1         &kp LC(BACKSPACE)
&scrub        &gg_ez        &only_game     &mo 2           &trans        &trans
&trans        &trans        &trans         &kp LC(K)       &kp LG(V)     &kp LG(PERIOD)
&kp LC(X)     &kp LC(C)     &kp LC(V)      &kp LC(Z)       &kp LC(Y)     &trans
&kp C_VOL_UP  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_NXT    &bt BT_PRV
&kp LG(D)     &kp C_VOL_DN  &kp LG(COMMA)  &bt BT_CLR_ALL  &out OUT_TOG  &trans
            >;
        };

        action_layer {
            bindings = <
&trans    &trans  &trans     &trans  &trans       &trans
&trans    &trans  &trans     &trans  &trans       &trans
&trans    &trans  &trans     &trans  &trans       &trans
&trans    &trans  &trans     &trans  &trans       &trans
&trans    &trans  &trans     &trans  &trans       &trans
&kp LEFT  &trans  &kp RIGHT  &trans  &bootloader  &trans
            >;
        };
    };
};
